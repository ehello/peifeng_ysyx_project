// Generated by CIRCT firtool-1.56.0
module IF_stage(	// @[<stdin>:68:3]
  input         clock,	// @[<stdin>:69:11]
                reset,	// @[<stdin>:70:11]
                IF_IO_valid,	// @[playground/src/IF_stage.scala:7:12]
  input  [31:0] IF_IO_bits_nextpc,	// @[playground/src/IF_stage.scala:7:12]
  input         IF_to_id_ready,	// @[playground/src/IF_stage.scala:7:12]
                IF_for_id_flush,	// @[playground/src/IF_stage.scala:7:12]
                IF_for_ex_flush,	// @[playground/src/IF_stage.scala:7:12]
                IF_r_valid,	// @[playground/src/IF_stage.scala:7:12]
  input  [31:0] IF_r_bits_data,	// @[playground/src/IF_stage.scala:7:12]
  output        IF_IO_ready,	// @[playground/src/IF_stage.scala:7:12]
                IF_to_id_valid,	// @[playground/src/IF_stage.scala:7:12]
  output [31:0] IF_to_id_bits_nextpc,	// @[playground/src/IF_stage.scala:7:12]
                IF_to_id_bits_pc,	// @[playground/src/IF_stage.scala:7:12]
                IF_to_id_bits_inst	// @[playground/src/IF_stage.scala:7:12]
);

  wire        if_inst_is_valid = IF_r_valid;	// @[playground/src/IF_stage.scala:17:38]
  wire        if_ready_go = if_inst_is_valid;	// @[playground/src/IF_stage.scala:17:38, :24:33]
  reg         resetnReg;	// @[playground/src/IF_stage.scala:18:34]
  wire        if_flush = IF_for_ex_flush | IF_for_id_flush;	// @[playground/src/IF_stage.scala:20:30, :21:30]
  reg         if_valid;	// @[playground/src/IF_stage.scala:23:33]
  wire        _IF_IO_ready_output = ~if_valid | if_ready_go & IF_to_id_ready;	// @[playground/src/IF_stage.scala:23:33, :24:33, :26:{18,28,43}]
  wire        _IF_to_id_valid_output = ~if_flush & if_valid & if_ready_go;	// @[playground/src/IF_stage.scala:20:30, :23:33, :24:33, :30:22]
  wire [31:0] if_inst = IF_r_valid ? IF_r_bits_data : 32'h0;	// @[playground/src/IF_stage.scala:16:36, :36:18, :37:12]
  wire [31:0] if_pc = IF_to_id_ready & _IF_to_id_valid_output ? IF_IO_bits_nextpc : 32'h0;	// @[playground/src/IF_stage.scala:16:36, :30:22, :42:34, :43:22, :44:10, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin	// @[<stdin>:69:11]
    if (reset) begin	// @[<stdin>:69:11]
      resetnReg <= 1'h0;	// @[playground/src/IF_stage.scala:18:34]
      if_valid <= 1'h0;	// @[playground/src/IF_stage.scala:18:34, :23:33]
    end
    else if (_IF_IO_ready_output)	// @[playground/src/IF_stage.scala:26:28]
      if_valid <= IF_IO_valid;	// @[playground/src/IF_stage.scala:23:33]
  end // always @(posedge)
  assign IF_IO_ready = _IF_IO_ready_output;	// @[<stdin>:68:3, playground/src/IF_stage.scala:26:28]
  assign IF_to_id_valid = _IF_to_id_valid_output;	// @[<stdin>:68:3, playground/src/IF_stage.scala:30:22]
  assign IF_to_id_bits_nextpc = IF_IO_bits_nextpc;	// @[<stdin>:68:3]
  assign IF_to_id_bits_pc = if_pc;	// @[<stdin>:68:3, playground/src/IF_stage.scala:42:34]
  assign IF_to_id_bits_inst = if_inst;	// @[<stdin>:68:3, playground/src/IF_stage.scala:16:36]
endmodule

