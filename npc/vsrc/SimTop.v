// Generated by CIRCT firtool-1.56.0
module IF_stage(	// @[<stdin>:3:3]
  input         clock,	// @[<stdin>:4:11]
                reset,	// @[<stdin>:5:11]
  input  [31:0] io_jalr_taget,	// @[playground/src/IF_stage.scala:6:14]
  input         io_is_not_jalr,	// @[playground/src/IF_stage.scala:6:14]
                io_is_jump,	// @[playground/src/IF_stage.scala:6:14]
  input  [31:0] io_Imm,	// @[playground/src/IF_stage.scala:6:14]
  output [31:0] io_pc,	// @[playground/src/IF_stage.scala:6:14]
                io_nextpc,	// @[playground/src/IF_stage.scala:6:14]
                io_f_dbus_snpc	// @[playground/src/IF_stage.scala:6:14]
);

  reg  [31:0] REGpc;	// @[playground/src/IF_stage.scala:15:27]
  wire [31:0] snpc = REGpc + 32'h4;	// @[playground/src/IF_stage.scala:15:27, :16:34, :19:18]
  wire [31:0] dnpc = io_is_not_jalr ? REGpc + io_Imm : io_jalr_taget;	// @[playground/src/IF_stage.scala:15:27, :17:34, :20:{15,38}]
  always @(posedge clock) begin	// @[<stdin>:4:11]
    if (reset)	// @[<stdin>:4:11]
      REGpc <= 32'h7FFFFFFC;	// @[playground/src/IF_stage.scala:15:27]
    else if (io_is_jump)	// @[playground/src/IF_stage.scala:6:14]
      REGpc <= dnpc;	// @[playground/src/IF_stage.scala:15:27, :17:34]
    else	// @[playground/src/IF_stage.scala:6:14]
      REGpc <= snpc;	// @[playground/src/IF_stage.scala:15:27, :16:34]
  end // always @(posedge)
  assign io_pc = REGpc;	// @[<stdin>:3:3, playground/src/IF_stage.scala:15:27]
  assign io_nextpc = io_is_jump ? dnpc : snpc;	// @[<stdin>:3:3, playground/src/IF_stage.scala:16:34, :17:34, :21:24]
  assign io_f_dbus_snpc = snpc;	// @[<stdin>:3:3, playground/src/IF_stage.scala:16:34]
endmodule

// external module singal_dpi

module ID_stage(	// @[<stdin>:39:3]
  input         clock,	// @[<stdin>:40:11]
                reset,	// @[<stdin>:41:11]
  input  [31:0] io_pc,	// @[playground/src/ID_stage.scala:6:14]
                io_nextpc,	// @[playground/src/ID_stage.scala:6:14]
                io_inst,	// @[playground/src/ID_stage.scala:6:14]
                io_result,	// @[playground/src/ID_stage.scala:6:14]
                io_f_dbus_snpc,	// @[playground/src/ID_stage.scala:6:14]
  output [31:0] io_Imm,	// @[playground/src/ID_stage.scala:6:14]
  output        io_is_not_jalr,	// @[playground/src/ID_stage.scala:6:14]
                io_is_jump,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_is_ebreak,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_data_wen,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_result_is_imm,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_result_is_snpc,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_src_is_sign,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_src1_is_pc,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_src2_is_imm,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_src2_is_shamt_imm,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_src2_is_shamt_src,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_sram_valid,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_sram_wen,	// @[playground/src/ID_stage.scala:6:14]
  output [3:0]  io_d_ebus_wmask,	// @[playground/src/ID_stage.scala:6:14]
  output [31:0] io_d_ebus_snpc,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_imm,	// @[playground/src/ID_stage.scala:6:14]
  output [4:0]  io_d_ebus_src1,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_src2,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_rd,	// @[playground/src/ID_stage.scala:6:14]
  output        io_d_ebus_alu_op_0,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_1,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_2,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_3,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_4,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_5,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_6,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_7,	// @[playground/src/ID_stage.scala:6:14]
                io_d_ebus_alu_op_8	// @[playground/src/ID_stage.scala:6:14]
);

  wire        IsaI_ebreak = 1'h0;	// @[playground/src/ID_stage.scala:21:32, :29:21]
  wire        IsaU_lui = io_inst[6:0] == 7'h37;	// @[playground/src/ID_stage.scala:24:32, :38:26]
  wire        IsaU_auipc = io_inst[6:0] == 7'h17;	// @[playground/src/ID_stage.scala:24:32, :38:26, :39:26]
  wire        IsaU_jal = io_inst[6:0] == 7'h6F;	// @[playground/src/ID_stage.scala:24:32, :38:26, :40:26]
  wire [9:0]  _GEN = {io_inst[14:12], io_inst[6:0]};	// @[playground/src/ID_stage.scala:38:26, :41:26]
  wire        IsaI_jalr = _GEN == 10'h67;	// @[playground/src/ID_stage.scala:21:32, :41:26]
  wire        IsaB_beq = _GEN == 10'h63;	// @[playground/src/ID_stage.scala:23:32, :41:26, :42:26]
  wire        IsaB_bne = _GEN == 10'hE3;	// @[playground/src/ID_stage.scala:23:32, :41:26, :43:26]
  wire        IsaB_blt = _GEN == 10'h263;	// @[playground/src/ID_stage.scala:23:32, :41:26, :44:26]
  wire        IsaB_bge = _GEN == 10'h2E3;	// @[playground/src/ID_stage.scala:23:32, :41:26, :45:26]
  wire        IsaB_bltu = _GEN == 10'h363;	// @[playground/src/ID_stage.scala:23:32, :41:26, :46:26]
  wire        IsaB_bgeu = _GEN == 10'h3E3;	// @[playground/src/ID_stage.scala:23:32, :41:26, :47:26]
  wire        IsaI_lb = _GEN == 10'h3;	// @[playground/src/ID_stage.scala:21:32, :41:26, :48:26]
  wire        IsaI_lh = _GEN == 10'h83;	// @[playground/src/ID_stage.scala:21:32, :41:26, :49:26]
  wire        IsaI_lw = _GEN == 10'h103;	// @[playground/src/ID_stage.scala:21:32, :41:26, :50:26]
  wire        IsaI_lbu = _GEN == 10'h203;	// @[playground/src/ID_stage.scala:21:32, :41:26, :51:26]
  wire        IsaI_lhu = _GEN == 10'h283;	// @[playground/src/ID_stage.scala:21:32, :41:26, :52:26]
  wire        IsaS_sb = _GEN == 10'h23;	// @[playground/src/ID_stage.scala:22:32, :41:26, :53:26]
  wire        IsaS_sh = _GEN == 10'hA3;	// @[playground/src/ID_stage.scala:22:32, :41:26, :54:26]
  wire        IsaS_sw = _GEN == 10'h123;	// @[playground/src/ID_stage.scala:22:32, :41:26, :55:26]
  wire        IsaI_addi = _GEN == 10'h13;	// @[playground/src/ID_stage.scala:21:32, :41:26, :56:26]
  wire        IsaI_slti = _GEN == 10'h113;	// @[playground/src/ID_stage.scala:21:32, :41:26, :57:26]
  wire        IsaI_sltiu = _GEN == 10'h193;	// @[playground/src/ID_stage.scala:21:32, :41:26, :58:26]
  wire        IsaI_xori = _GEN == 10'h213;	// @[playground/src/ID_stage.scala:21:32, :41:26, :59:26]
  wire        IsaI_ori = _GEN == 10'h313;	// @[playground/src/ID_stage.scala:21:32, :41:26, :60:26]
  wire        IsaI_andi = _GEN == 10'h393;	// @[playground/src/ID_stage.scala:21:32, :41:26, :61:26]
  wire [16:0] _GEN_0 = {io_inst[31:25], io_inst[14:12], io_inst[6:0]};	// @[playground/src/ID_stage.scala:38:26, :41:26, :62:26]
  wire        IsaI_slli = _GEN_0 == 17'h93;	// @[playground/src/ID_stage.scala:21:32, :62:26]
  wire        IsaI_srli = _GEN_0 == 17'h293;	// @[playground/src/ID_stage.scala:21:32, :62:26, :63:26]
  wire        IsaI_srai = _GEN_0 == 17'h8293;	// @[playground/src/ID_stage.scala:21:32, :62:26, :64:26]
  wire        IsaR_add = _GEN_0 == 17'h33;	// @[playground/src/ID_stage.scala:20:32, :62:26, :65:26]
  wire        IsaR_sub = _GEN_0 == 17'h8033;	// @[playground/src/ID_stage.scala:20:32, :62:26, :66:26]
  wire        IsaR_sll = _GEN_0 == 17'hB3;	// @[playground/src/ID_stage.scala:20:32, :62:26, :67:26]
  wire        IsaR_slt = _GEN_0 == 17'h133;	// @[playground/src/ID_stage.scala:20:32, :62:26, :68:26]
  wire        IsaR_sltu = _GEN_0 == 17'h1B3;	// @[playground/src/ID_stage.scala:20:32, :62:26, :69:26]
  wire        IsaR_xor = _GEN_0 == 17'h233;	// @[playground/src/ID_stage.scala:20:32, :62:26, :70:26]
  wire        IsaR_srl = _GEN_0 == 17'h2B3;	// @[playground/src/ID_stage.scala:20:32, :62:26, :71:26]
  wire        IsaR_sra = _GEN_0 == 17'h82B3;	// @[playground/src/ID_stage.scala:20:32, :62:26, :72:26]
  wire        IsaR_or = _GEN_0 == 17'h333;	// @[playground/src/ID_stage.scala:20:32, :62:26, :73:26]
  wire        IsaR_and = _GEN_0 == 17'h3B3;	// @[playground/src/ID_stage.scala:20:32, :62:26, :74:26]
  wire [4:0]  _io_Imm_T =
    {|{IsaI_jalr,
       IsaI_lb,
       IsaI_lh,
       IsaI_lw,
       IsaI_lbu,
       IsaI_lhu,
       IsaI_addi,
       IsaI_slti,
       IsaI_sltiu,
       IsaI_xori,
       IsaI_ori,
       IsaI_andi,
       IsaI_slli,
       IsaI_srli,
       IsaI_srai,
       IsaI_ebreak},
     |{IsaS_sb, IsaS_sh, IsaS_sw},
     |{IsaB_beq, IsaB_bne, IsaB_blt, IsaB_bge, IsaB_bltu, IsaB_bgeu},
     |{IsaU_lui, IsaU_auipc, IsaU_jal},
     IsaU_jal};	// @[playground/src/ID_stage.scala:21:32, :22:32, :23:32, :24:32, :84:{32,39}, :85:{32,39}, :86:{32,39}, :87:{32,39}, :89:31]
  wire [31:0] _io_Imm_output =
    _io_Imm_T == 5'h3
      ? {{12{io_inst[19]}}, io_inst[19:12], io_inst[20], io_inst[30:21], 1'h0}
      : _io_Imm_T == 5'h2
          ? {io_inst[31:12], 12'h0}
          : _io_Imm_T == 5'h4
              ? {{21{io_inst[7]}}, io_inst[30:25], io_inst[11:8], 1'h0}
              : _io_Imm_T == 5'h8
                  ? {{20{io_inst[31]}}, io_inst[31:25], io_inst[11:7]}
                  : _io_Imm_T == 5'h10 ? {{20{io_inst[31]}}, io_inst[31:20]} : 32'h0;	// @[playground/src/Bundle.scala:101:{10,15,37}, playground/src/ID_stage.scala:27:25, :28:{29,46}, :29:{21,42,54,71}, :30:{21,29}, :31:{42,59,72}, :89:{31,43}]
  wire        _io_d_ebus_alu_op_0_T = IsaI_addi | IsaR_add;	// @[playground/src/ID_stage.scala:20:32, :21:32, :99:36]
  wire        _singal_dpi_io_func_flag_T = IsaU_jal | IsaI_jalr;	// @[playground/src/ID_stage.scala:21:32, :24:32, :105:40]
  wire        _io_d_ebus_alu_op_7_T = IsaI_srai | IsaR_sra;	// @[playground/src/ID_stage.scala:20:32, :21:32, :106:41]
  wire        _io_d_ebus_sram_valid_output =
    IsaI_lb | IsaI_lh | IsaI_lw | IsaI_lbu | IsaI_lhu | IsaS_sb | IsaS_sh | IsaS_sw;	// @[playground/src/ID_stage.scala:21:32, :22:32, :113:104]
  wire        rs1_eq_rs2 = io_inst[19:15] == io_inst[24:20];	// @[playground/src/ID_stage.scala:32:25, :33:25, :150:31]
  wire        rs1_lt_rs2_s = $signed(io_inst[19:15]) < $signed(io_inst[24:20]);	// @[playground/src/ID_stage.scala:32:25, :33:25, :151:38]
  wire        rs1_lt_rs2_u = io_inst[19:15] < io_inst[24:20];	// @[playground/src/ID_stage.scala:32:25, :33:25, :152:31]
  singal_dpi singal_dpi (	// @[playground/src/ID_stage.scala:162:26]
    .clock       (clock),
    .reset       (reset),
    .pc          (io_pc),
    .nextpc      (io_nextpc),
    .inst        (io_inst),
    .rd          ({27'h0, io_inst[11:7]}),	// @[playground/src/ID_stage.scala:28:46, :39:26, :168:29]
    .is_jal      (IsaU_jal),	// @[playground/src/ID_stage.scala:24:32]
    .func_flag   (_singal_dpi_io_func_flag_T),	// @[playground/src/ID_stage.scala:105:40]
    .ebreak_flag (IsaI_ebreak),	// @[playground/src/ID_stage.scala:21:32]
    .inv_flag
      ((|io_inst) & {IsaB_beq, IsaB_bne, IsaB_blt, IsaB_bge, IsaB_bltu, IsaB_bgeu} == 6'h0
       & {IsaI_jalr,
          IsaI_lb,
          IsaI_lh,
          IsaI_lw,
          IsaI_lbu,
          IsaI_lhu,
          IsaI_addi,
          IsaI_slti,
          IsaI_sltiu,
          IsaI_xori,
          IsaI_ori,
          IsaI_andi,
          IsaI_slli,
          IsaI_srli,
          IsaI_srai,
          IsaI_ebreak} == 16'h0
       & {IsaR_add,
          IsaR_sub,
          IsaR_sll,
          IsaR_slt,
          IsaR_sltu,
          IsaR_xor,
          IsaR_srl,
          IsaR_sra,
          IsaR_or,
          IsaR_and} == 10'h0 & {IsaS_sb, IsaS_sh, IsaS_sw} == 3'h0
       & {IsaU_lui, IsaU_auipc, IsaU_jal} == 3'h0),	// @[playground/src/ID_stage.scala:20:32, :21:32, :22:32, :23:32, :24:32, :77:{31,46,53,68,75,90,97,112,119,127,134,141}]
    .ret_reg     (io_result)
  );
  assign io_Imm = _io_Imm_output;	// @[<stdin>:39:3, playground/src/ID_stage.scala:89:43]
  assign io_is_not_jalr =
    IsaU_jal | IsaB_beq | IsaB_bne | IsaB_blt | IsaB_bltu | IsaB_bge | IsaB_bgeu;	// @[<stdin>:39:3, playground/src/ID_stage.scala:23:32, :24:32, :124:86]
  assign io_is_jump =
    _singal_dpi_io_func_flag_T | IsaB_beq & rs1_eq_rs2 | IsaB_bne & ~rs1_eq_rs2 | IsaB_blt
    & rs1_lt_rs2_s | IsaB_bltu & rs1_lt_rs2_u | IsaB_bge & ~rs1_lt_rs2_s | IsaB_bgeu
    & ~rs1_lt_rs2_u;	// @[<stdin>:39:3, playground/src/ID_stage.scala:23:32, :105:40, :150:31, :151:38, :152:31, :155:26, :156:{26,29}, :157:26, :158:27, :159:{26,29}, :160:{15,27,30}]
  assign io_d_ebus_is_ebreak = IsaI_ebreak;	// @[<stdin>:39:3, playground/src/ID_stage.scala:21:32]
  assign io_d_ebus_data_wen =
    _io_d_ebus_alu_op_0_T | IsaI_andi | IsaR_and | IsaU_lui | IsaR_slt | IsaR_sltu
    | IsaR_sub | IsaI_ori | IsaR_or | IsaI_xori | IsaR_xor | IsaI_jalr | IsaU_jal
    | IsaU_auipc | IsaI_slti | IsaI_sltiu | IsaI_slli | IsaI_srai | IsaI_srli | IsaR_sll
    | IsaR_sra | IsaR_srl;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :24:32, :99:36, :103:71]
  assign io_d_ebus_result_is_imm = IsaU_lui;	// @[<stdin>:39:3, playground/src/ID_stage.scala:24:32]
  assign io_d_ebus_result_is_snpc = _singal_dpi_io_func_flag_T;	// @[<stdin>:39:3, playground/src/ID_stage.scala:105:40]
  assign io_d_ebus_src_is_sign = _io_d_ebus_alu_op_7_T | IsaR_slt | IsaB_blt | IsaB_bltu;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :23:32, :106:{41,74}]
  assign io_d_ebus_src1_is_pc = IsaU_auipc;	// @[<stdin>:39:3, playground/src/ID_stage.scala:24:32]
  assign io_d_ebus_src2_is_imm =
    IsaI_addi | IsaI_slti | IsaI_sltiu | IsaI_xori | IsaI_ori | IsaI_andi | IsaI_jalr
    | IsaU_auipc | IsaS_sb | IsaS_sh | IsaS_sw | IsaI_lb | IsaI_lh | IsaI_lw | IsaI_lbu
    | IsaI_lhu;	// @[<stdin>:39:3, playground/src/ID_stage.scala:21:32, :22:32, :24:32, :110:76]
  assign io_d_ebus_src2_is_shamt_imm = IsaI_slli | IsaI_srai | IsaI_srli;	// @[<stdin>:39:3, playground/src/ID_stage.scala:21:32, :111:56]
  assign io_d_ebus_src2_is_shamt_src = IsaR_sll | IsaR_sra | IsaR_srl;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :112:54]
  assign io_d_ebus_sram_valid = _io_d_ebus_sram_valid_output;	// @[<stdin>:39:3, playground/src/ID_stage.scala:113:104]
  assign io_d_ebus_sram_wen = IsaS_sb | IsaS_sh | IsaS_sw;	// @[<stdin>:39:3, playground/src/ID_stage.scala:22:32, :114:52]
  assign io_d_ebus_wmask =
    IsaI_lb | IsaI_lbu ? 4'h1 : IsaI_lh | IsaI_lhu ? 4'h3 : {4{IsaI_lw}};	// @[<stdin>:39:3, playground/src/ID_stage.scala:21:32, :115:{37,46}, :116:{38,47}, :117:40]
  assign io_d_ebus_snpc = io_f_dbus_snpc;	// @[<stdin>:39:3]
  assign io_d_ebus_imm = _io_Imm_output;	// @[<stdin>:39:3, playground/src/ID_stage.scala:89:43]
  assign io_d_ebus_src1 = io_inst[19:15];	// @[<stdin>:39:3, playground/src/ID_stage.scala:33:25]
  assign io_d_ebus_src2 = io_inst[24:20];	// @[<stdin>:39:3, playground/src/ID_stage.scala:32:25]
  assign io_d_ebus_rd = io_inst[11:7];	// @[<stdin>:39:3, playground/src/ID_stage.scala:28:46]
  assign io_d_ebus_alu_op_0 =
    _io_d_ebus_alu_op_0_T | IsaI_ebreak | IsaI_jalr | IsaU_auipc
    | _io_d_ebus_sram_valid_output;	// @[<stdin>:39:3, playground/src/ID_stage.scala:21:32, :24:32, :99:36, :113:104, :127:25]
  assign io_d_ebus_alu_op_1 = IsaR_sub;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32]
  assign io_d_ebus_alu_op_2 = IsaI_andi | IsaR_and;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :131:36]
  assign io_d_ebus_alu_op_3 = IsaI_ori | IsaR_or;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :133:36]
  assign io_d_ebus_alu_op_4 = IsaI_xori | IsaR_xor;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :135:36]
  assign io_d_ebus_alu_op_5 = IsaR_slt | IsaR_sltu | IsaI_slti | IsaI_sltiu;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :137:60]
  assign io_d_ebus_alu_op_6 = IsaI_slli | IsaR_sll;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :139:36]
  assign io_d_ebus_alu_op_7 = _io_d_ebus_alu_op_7_T;	// @[<stdin>:39:3, playground/src/ID_stage.scala:106:41]
  assign io_d_ebus_alu_op_8 = IsaI_srli | IsaR_srl;	// @[<stdin>:39:3, playground/src/ID_stage.scala:20:32, :21:32, :143:36]
endmodule

// external module debug

module RegFile(	// @[<stdin>:476:3]
  input         clock,	// @[<stdin>:477:11]
                reset,	// @[<stdin>:478:11]
  input  [4:0]  io_waddr,	// @[playground/src/RegFile.scala:5:12]
  input  [31:0] io_wdata,	// @[playground/src/RegFile.scala:5:12]
  input  [4:0]  io_raddr1,	// @[playground/src/RegFile.scala:5:12]
                io_raddr2,	// @[playground/src/RegFile.scala:5:12]
  input         io_wen,	// @[playground/src/RegFile.scala:5:12]
  output [31:0] io_rdata1,	// @[playground/src/RegFile.scala:5:12]
                io_rdata2	// @[playground/src/RegFile.scala:5:12]
);

  reg [31:0] casez_tmp;	// @[playground/src/RegFile.scala:17:17]
  reg [31:0] casez_tmp_0;	// @[playground/src/RegFile.scala:18:17]
  reg [31:0] rf_0;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_1;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_2;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_3;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_4;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_5;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_6;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_7;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_8;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_9;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_10;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_11;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_12;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_13;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_14;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_15;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_16;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_17;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_18;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_19;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_20;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_21;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_22;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_23;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_24;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_25;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_26;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_27;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_28;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_29;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_30;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_31;	// @[playground/src/RegFile.scala:14:17]
  always_comb begin	// @[playground/src/RegFile.scala:17:17]
    casez (io_raddr1)	// @[playground/src/RegFile.scala:17:17]
      5'b00000:
        casez_tmp = rf_0;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00001:
        casez_tmp = rf_1;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00010:
        casez_tmp = rf_2;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00011:
        casez_tmp = rf_3;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00100:
        casez_tmp = rf_4;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00101:
        casez_tmp = rf_5;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00110:
        casez_tmp = rf_6;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00111:
        casez_tmp = rf_7;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01000:
        casez_tmp = rf_8;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01001:
        casez_tmp = rf_9;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01010:
        casez_tmp = rf_10;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01011:
        casez_tmp = rf_11;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01100:
        casez_tmp = rf_12;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01101:
        casez_tmp = rf_13;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01110:
        casez_tmp = rf_14;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01111:
        casez_tmp = rf_15;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10000:
        casez_tmp = rf_16;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10001:
        casez_tmp = rf_17;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10010:
        casez_tmp = rf_18;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10011:
        casez_tmp = rf_19;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10100:
        casez_tmp = rf_20;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10101:
        casez_tmp = rf_21;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10110:
        casez_tmp = rf_22;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10111:
        casez_tmp = rf_23;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11000:
        casez_tmp = rf_24;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11001:
        casez_tmp = rf_25;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11010:
        casez_tmp = rf_26;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11011:
        casez_tmp = rf_27;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11100:
        casez_tmp = rf_28;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11101:
        casez_tmp = rf_29;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11110:
        casez_tmp = rf_30;	// @[playground/src/RegFile.scala:14:17, :17:17]
      default:
        casez_tmp = rf_31;	// @[playground/src/RegFile.scala:14:17, :17:17]
    endcase	// @[playground/src/RegFile.scala:17:17]
  end // always_comb
  always_comb begin	// @[playground/src/RegFile.scala:17:17]
    casez (io_raddr2)	// @[playground/src/RegFile.scala:17:17]
      5'b00000:
        casez_tmp_0 = rf_0;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00001:
        casez_tmp_0 = rf_1;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00010:
        casez_tmp_0 = rf_2;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00011:
        casez_tmp_0 = rf_3;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00100:
        casez_tmp_0 = rf_4;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00101:
        casez_tmp_0 = rf_5;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00110:
        casez_tmp_0 = rf_6;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b00111:
        casez_tmp_0 = rf_7;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01000:
        casez_tmp_0 = rf_8;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01001:
        casez_tmp_0 = rf_9;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01010:
        casez_tmp_0 = rf_10;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01011:
        casez_tmp_0 = rf_11;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01100:
        casez_tmp_0 = rf_12;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01101:
        casez_tmp_0 = rf_13;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01110:
        casez_tmp_0 = rf_14;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b01111:
        casez_tmp_0 = rf_15;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10000:
        casez_tmp_0 = rf_16;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10001:
        casez_tmp_0 = rf_17;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10010:
        casez_tmp_0 = rf_18;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10011:
        casez_tmp_0 = rf_19;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10100:
        casez_tmp_0 = rf_20;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10101:
        casez_tmp_0 = rf_21;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10110:
        casez_tmp_0 = rf_22;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b10111:
        casez_tmp_0 = rf_23;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11000:
        casez_tmp_0 = rf_24;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11001:
        casez_tmp_0 = rf_25;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11010:
        casez_tmp_0 = rf_26;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11011:
        casez_tmp_0 = rf_27;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11100:
        casez_tmp_0 = rf_28;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11101:
        casez_tmp_0 = rf_29;	// @[playground/src/RegFile.scala:14:17, :17:17]
      5'b11110:
        casez_tmp_0 = rf_30;	// @[playground/src/RegFile.scala:14:17, :17:17]
      default:
        casez_tmp_0 = rf_31;	// @[playground/src/RegFile.scala:14:17, :17:17]
    endcase	// @[playground/src/RegFile.scala:17:17]
  end // always_comb
  always @(posedge clock) begin	// @[<stdin>:477:11]
    if (reset) begin	// @[<stdin>:477:11]
      rf_0 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_1 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_2 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_3 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_4 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_5 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_6 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_7 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_8 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_9 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_10 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_11 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_12 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_13 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_14 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_15 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_16 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_17 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_18 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_19 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_20 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_21 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_22 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_23 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_24 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_25 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_26 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_27 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_28 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_29 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_30 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_31 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
    end
    else begin	// @[<stdin>:477:11]
      if (io_wen & ~(|io_waddr)) begin	// @[playground/src/RegFile.scala:14:17, :15:25, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_0 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_0 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h1) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_1 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_1 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h2) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_2 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_2 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h3) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_3 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_3 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h4) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_4 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_4 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h5) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_5 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_5 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h6) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_6 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_6 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h7) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_7 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_7 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h8) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_8 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_8 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h9) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_9 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_9 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'hA) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_10 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_10 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'hB) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_11 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_11 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'hC) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_12 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_12 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'hD) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_13 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_13 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'hE) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_14 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_14 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'hF) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_15 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_15 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h10) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_16 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_16 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h11) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_17 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_17 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h12) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_18 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_18 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h13) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_19 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_19 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h14) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_20 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_20 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h15) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_21 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_21 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h16) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_22 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_22 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h17) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_23 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_23 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h18) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_24 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_24 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h19) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_25 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_25 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h1A) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_26 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_26 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h1B) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_27 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_27 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h1C) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_28 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_28 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h1D) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_29 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_29 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & io_waddr == 5'h1E) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_30 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_30 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
      if (io_wen & (&io_waddr)) begin	// @[playground/src/RegFile.scala:14:17, :16:{15,29}]
        if (|io_waddr)	// @[playground/src/RegFile.scala:15:25]
          rf_31 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
        else	// @[playground/src/RegFile.scala:15:25]
          rf_31 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      end
    end
  end // always @(posedge)
  debug debug (	// @[playground/src/RegFile.scala:19:21]
    .clock   (clock),
    .reset   (reset),
    .debug_1 (io_waddr),
    .debug_2 ((|io_waddr) ? io_wdata : 32'h0)	// @[playground/src/RegFile.scala:14:25, :15:{16,25}]
  );
  assign io_rdata1 = (|io_raddr1) ? casez_tmp : 32'h0;	// @[<stdin>:476:3, playground/src/RegFile.scala:14:25, :17:{17,27}]
  assign io_rdata2 = (|io_raddr2) ? casez_tmp_0 : 32'h0;	// @[<stdin>:476:3, playground/src/RegFile.scala:14:25, :18:{17,27}]
endmodule

module Alu(	// @[<stdin>:532:3]
  input  [11:0] io_op,	// @[playground/src/Alu.scala:5:14]
  input  [31:0] io_src1,	// @[playground/src/Alu.scala:5:14]
                io_src2,	// @[playground/src/Alu.scala:5:14]
  input         io_sign,	// @[playground/src/Alu.scala:5:14]
  output [31:0] io_result	// @[playground/src/Alu.scala:5:14]
);

  wire [94:0] _sll_T_1 = {63'h0, io_src1} << io_src2[5:0];	// @[playground/src/Alu.scala:18:{18,28}]
  wire [31:0] _GEN = {26'h0, io_src2[5:0]};	// @[playground/src/Alu.scala:18:28, :38:32]
  assign io_result =
    io_op == 12'h200
      ? io_src1 >> _GEN
      : io_op == 12'h100
          ? $signed($signed(io_src1) >>> _GEN)
          : io_op == 12'h80
              ? _sll_T_1[31:0]
              : io_op == 12'h40
                  ? {31'h0,
                     io_sign ? $signed(io_src1) < $signed(io_src2) : io_src1 < io_src2}
                  : io_op == 12'h20
                      ? {31'h0, io_src1 == io_src2}
                      : io_op == 12'h10
                          ? io_src1 ^ io_src2
                          : io_op == 12'h8
                              ? io_src1 | io_src2
                              : io_op == 12'h4
                                  ? io_src1 & io_src2
                                  : io_op == 12'h2
                                      ? io_src1 - io_src2
                                      : io_op == 12'h1 ? io_src1 + io_src2 : 32'h0;	// @[<stdin>:532:3, playground/src/Alu.scala:14:29, :15:36, :18:18, :20:24, :22:24, :26:25, :28:25, :30:25, :32:28, :34:20, :36:20, :38:32, :40:25, :42:37]
endmodule

module EXE_stage(	// @[<stdin>:587:3]
  input         clock,	// @[<stdin>:588:11]
                reset,	// @[<stdin>:589:11]
                io_d_ebus_is_ebreak,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_data_wen,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_result_is_imm,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_result_is_snpc,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_src_is_sign,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_src1_is_pc,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_src2_is_imm,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_src2_is_shamt_imm,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_src2_is_shamt_src,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_sram_valid,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_sram_wen,	// @[playground/src/EXE_stage.scala:4:12]
  input  [3:0]  io_d_ebus_wmask,	// @[playground/src/EXE_stage.scala:4:12]
  input  [31:0] io_d_ebus_snpc,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_imm,	// @[playground/src/EXE_stage.scala:4:12]
  input  [4:0]  io_d_ebus_src1,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_src2,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_rd,	// @[playground/src/EXE_stage.scala:4:12]
  input         io_d_ebus_alu_op_0,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_1,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_2,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_3,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_4,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_5,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_6,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_7,	// @[playground/src/EXE_stage.scala:4:12]
                io_d_ebus_alu_op_8,	// @[playground/src/EXE_stage.scala:4:12]
  input  [31:0] io_pc,	// @[playground/src/EXE_stage.scala:4:12]
  output [31:0] io_result,	// @[playground/src/EXE_stage.scala:4:12]
                io_jalr_taget,	// @[playground/src/EXE_stage.scala:4:12]
  output        io_sram_valid,	// @[playground/src/EXE_stage.scala:4:12]
                io_sram_wen,	// @[playground/src/EXE_stage.scala:4:12]
  output [31:0] io_sram_wdata,	// @[playground/src/EXE_stage.scala:4:12]
  output [3:0]  io_sram_wmask	// @[playground/src/EXE_stage.scala:4:12]
);

  wire [31:0] _alu_io_result;	// @[playground/src/EXE_stage.scala:23:18]
  wire [31:0] _RegFile_io_rdata1;	// @[playground/src/EXE_stage.scala:14:21]
  wire [31:0] _RegFile_io_rdata2;	// @[playground/src/EXE_stage.scala:14:21]
  wire [31:0] _io_result_output =
    io_d_ebus_result_is_imm
      ? io_d_ebus_imm
      : io_d_ebus_result_is_snpc ? io_d_ebus_snpc : _alu_io_result;	// @[playground/src/EXE_stage.scala:23:18, :34:17, :35:18]
  wire [31:0] _jalr_tmp_T = _alu_io_result + io_d_ebus_imm;	// @[playground/src/EXE_stage.scala:23:18, :36:29]
  RegFile RegFile (	// @[playground/src/EXE_stage.scala:14:21]
    .clock     (clock),
    .reset     (reset),
    .io_waddr  (io_d_ebus_rd),
    .io_wdata  (_io_result_output),	// @[playground/src/EXE_stage.scala:34:17]
    .io_raddr1 (io_d_ebus_is_ebreak ? 5'hA : io_d_ebus_src1),	// @[playground/src/EXE_stage.scala:16:25]
    .io_raddr2 (io_d_ebus_is_ebreak ? 5'h0 : io_d_ebus_src2),	// @[playground/src/EXE_stage.scala:17:25]
    .io_wen    (io_d_ebus_data_wen),
    .io_rdata1 (_RegFile_io_rdata1),
    .io_rdata2 (_RegFile_io_rdata2)
  );
  Alu alu (	// @[playground/src/EXE_stage.scala:23:18]
    .io_op
      ({3'h0,
        io_d_ebus_alu_op_8,
        io_d_ebus_alu_op_7,
        io_d_ebus_alu_op_6,
        io_d_ebus_alu_op_5,
        io_d_ebus_alu_op_4,
        io_d_ebus_alu_op_3,
        io_d_ebus_alu_op_2,
        io_d_ebus_alu_op_1,
        io_d_ebus_alu_op_0}),	// @[playground/src/EXE_stage.scala:29:33]
    .io_src1   (io_d_ebus_src1_is_pc ? io_pc : _RegFile_io_rdata1),	// @[playground/src/EXE_stage.scala:14:21, :24:19]
    .io_src2
      (io_d_ebus_src2_is_imm
         ? io_d_ebus_imm
         : io_d_ebus_src2_is_shamt_imm
             ? {26'h0, io_d_ebus_imm[5:0]}
             : io_d_ebus_src2_is_shamt_src
                 ? {26'h0, _RegFile_io_rdata2[5:0]}
                 : _RegFile_io_rdata2),	// @[playground/src/EXE_stage.scala:14:21, :25:19, :26:{20,62}, :27:{22,60}]
    .io_sign   (io_d_ebus_src_is_sign),
    .io_result (_alu_io_result)
  );
  assign io_result = _io_result_output;	// @[<stdin>:587:3, playground/src/EXE_stage.scala:34:17]
  assign io_jalr_taget = {_jalr_tmp_T[31:1], 1'h0};	// @[<stdin>:587:3, playground/src/EXE_stage.scala:17:25, :36:29, :37:{21,30}]
  assign io_sram_valid = io_d_ebus_sram_valid;	// @[<stdin>:587:3]
  assign io_sram_wen = io_d_ebus_sram_wen;	// @[<stdin>:587:3]
  assign io_sram_wdata = {27'h0, io_d_ebus_src2};	// @[<stdin>:587:3, playground/src/EXE_stage.scala:41:16]
  assign io_sram_wmask = io_d_ebus_wmask;	// @[<stdin>:587:3]
endmodule

// external module pmem_dpi

module SimTop(	// @[<stdin>:654:3]
  input         clock,	// @[<stdin>:655:11]
                reset,	// @[<stdin>:656:11]
  output [31:0] io_result	// @[playground/src/SimTop.scala:6:14]
);

  wire [31:0] sram_rdata;	// @[playground/src/SimTop.scala:18:35]
  wire [31:0] nextpc;	// @[playground/src/SimTop.scala:13:35]
  wire [31:0] pc;	// @[playground/src/SimTop.scala:12:35]
  wire [31:0] _EXE_stage_io_result;	// @[playground/src/SimTop.scala:41:25]
  wire        _EXE_stage_io_sram_valid;	// @[playground/src/SimTop.scala:41:25]
  wire        _EXE_stage_io_sram_wen;	// @[playground/src/SimTop.scala:41:25]
  wire [31:0] _EXE_stage_io_sram_wdata;	// @[playground/src/SimTop.scala:41:25]
  wire [3:0]  _EXE_stage_io_sram_wmask;	// @[playground/src/SimTop.scala:41:25]
  wire        _ID_stage_io_d_ebus_is_ebreak;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_data_wen;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_result_is_imm;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_result_is_snpc;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_src_is_sign;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_src1_is_pc;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_src2_is_imm;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_src2_is_shamt_imm;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_src2_is_shamt_src;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_sram_valid;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_sram_wen;	// @[playground/src/SimTop.scala:29:24]
  wire [3:0]  _ID_stage_io_d_ebus_wmask;	// @[playground/src/SimTop.scala:29:24]
  wire [31:0] _ID_stage_io_d_ebus_snpc;	// @[playground/src/SimTop.scala:29:24]
  wire [31:0] _ID_stage_io_d_ebus_imm;	// @[playground/src/SimTop.scala:29:24]
  wire [4:0]  _ID_stage_io_d_ebus_src1;	// @[playground/src/SimTop.scala:29:24]
  wire [4:0]  _ID_stage_io_d_ebus_src2;	// @[playground/src/SimTop.scala:29:24]
  wire [4:0]  _ID_stage_io_d_ebus_rd;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_0;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_1;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_2;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_3;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_4;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_5;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_6;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_7;	// @[playground/src/SimTop.scala:29:24]
  wire        _ID_stage_io_d_ebus_alu_op_8;	// @[playground/src/SimTop.scala:29:24]
  wire [31:0] _IF_stage_io_f_dbus_snpc;	// @[playground/src/SimTop.scala:21:24]
  wire [31:0] Imm;	// @[playground/src/SimTop.scala:11:35]
  wire        is_not_jalr;	// @[playground/src/SimTop.scala:14:35]
  wire        is_jump;	// @[playground/src/SimTop.scala:15:35]
  wire [31:0] jalr_taget;	// @[playground/src/SimTop.scala:16:35]
  IF_stage IF_stage (	// @[playground/src/SimTop.scala:21:24]
    .clock          (clock),
    .reset          (reset),
    .io_jalr_taget  (jalr_taget),	// @[playground/src/SimTop.scala:16:35]
    .io_is_not_jalr (is_not_jalr),	// @[playground/src/SimTop.scala:14:35]
    .io_is_jump     (is_jump),	// @[playground/src/SimTop.scala:15:35]
    .io_Imm         (Imm),	// @[playground/src/SimTop.scala:11:35]
    .io_pc          (pc),
    .io_nextpc      (nextpc),
    .io_f_dbus_snpc (_IF_stage_io_f_dbus_snpc)
  );
  wire [31:0] inst;	// @[playground/src/SimTop.scala:19:35]
  ID_stage ID_stage (	// @[playground/src/SimTop.scala:29:24]
    .clock                       (clock),
    .reset                       (reset),
    .io_pc                       (pc),	// @[playground/src/SimTop.scala:12:35]
    .io_nextpc                   (nextpc),	// @[playground/src/SimTop.scala:13:35]
    .io_inst                     (inst),	// @[playground/src/SimTop.scala:19:35]
    .io_result                   (_EXE_stage_io_result),	// @[playground/src/SimTop.scala:41:25]
    .io_f_dbus_snpc              (_IF_stage_io_f_dbus_snpc),	// @[playground/src/SimTop.scala:21:24]
    .io_Imm                      (Imm),
    .io_is_not_jalr              (is_not_jalr),
    .io_is_jump                  (is_jump),
    .io_d_ebus_is_ebreak         (_ID_stage_io_d_ebus_is_ebreak),
    .io_d_ebus_data_wen          (_ID_stage_io_d_ebus_data_wen),
    .io_d_ebus_result_is_imm     (_ID_stage_io_d_ebus_result_is_imm),
    .io_d_ebus_result_is_snpc    (_ID_stage_io_d_ebus_result_is_snpc),
    .io_d_ebus_src_is_sign       (_ID_stage_io_d_ebus_src_is_sign),
    .io_d_ebus_src1_is_pc        (_ID_stage_io_d_ebus_src1_is_pc),
    .io_d_ebus_src2_is_imm       (_ID_stage_io_d_ebus_src2_is_imm),
    .io_d_ebus_src2_is_shamt_imm (_ID_stage_io_d_ebus_src2_is_shamt_imm),
    .io_d_ebus_src2_is_shamt_src (_ID_stage_io_d_ebus_src2_is_shamt_src),
    .io_d_ebus_sram_valid        (_ID_stage_io_d_ebus_sram_valid),
    .io_d_ebus_sram_wen          (_ID_stage_io_d_ebus_sram_wen),
    .io_d_ebus_wmask             (_ID_stage_io_d_ebus_wmask),
    .io_d_ebus_snpc              (_ID_stage_io_d_ebus_snpc),
    .io_d_ebus_imm               (_ID_stage_io_d_ebus_imm),
    .io_d_ebus_src1              (_ID_stage_io_d_ebus_src1),
    .io_d_ebus_src2              (_ID_stage_io_d_ebus_src2),
    .io_d_ebus_rd                (_ID_stage_io_d_ebus_rd),
    .io_d_ebus_alu_op_0          (_ID_stage_io_d_ebus_alu_op_0),
    .io_d_ebus_alu_op_1          (_ID_stage_io_d_ebus_alu_op_1),
    .io_d_ebus_alu_op_2          (_ID_stage_io_d_ebus_alu_op_2),
    .io_d_ebus_alu_op_3          (_ID_stage_io_d_ebus_alu_op_3),
    .io_d_ebus_alu_op_4          (_ID_stage_io_d_ebus_alu_op_4),
    .io_d_ebus_alu_op_5          (_ID_stage_io_d_ebus_alu_op_5),
    .io_d_ebus_alu_op_6          (_ID_stage_io_d_ebus_alu_op_6),
    .io_d_ebus_alu_op_7          (_ID_stage_io_d_ebus_alu_op_7),
    .io_d_ebus_alu_op_8          (_ID_stage_io_d_ebus_alu_op_8)
  );
  EXE_stage EXE_stage (	// @[playground/src/SimTop.scala:41:25]
    .clock                       (clock),
    .reset                       (reset),
    .io_d_ebus_is_ebreak         (_ID_stage_io_d_ebus_is_ebreak),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_data_wen          (_ID_stage_io_d_ebus_data_wen),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_result_is_imm     (_ID_stage_io_d_ebus_result_is_imm),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_result_is_snpc    (_ID_stage_io_d_ebus_result_is_snpc),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src_is_sign       (_ID_stage_io_d_ebus_src_is_sign),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src1_is_pc        (_ID_stage_io_d_ebus_src1_is_pc),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src2_is_imm       (_ID_stage_io_d_ebus_src2_is_imm),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src2_is_shamt_imm (_ID_stage_io_d_ebus_src2_is_shamt_imm),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src2_is_shamt_src (_ID_stage_io_d_ebus_src2_is_shamt_src),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_sram_valid        (_ID_stage_io_d_ebus_sram_valid),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_sram_wen          (_ID_stage_io_d_ebus_sram_wen),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_wmask             (_ID_stage_io_d_ebus_wmask),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_snpc              (_ID_stage_io_d_ebus_snpc),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_imm               (_ID_stage_io_d_ebus_imm),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src1              (_ID_stage_io_d_ebus_src1),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_src2              (_ID_stage_io_d_ebus_src2),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_rd                (_ID_stage_io_d_ebus_rd),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_0          (_ID_stage_io_d_ebus_alu_op_0),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_1          (_ID_stage_io_d_ebus_alu_op_1),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_2          (_ID_stage_io_d_ebus_alu_op_2),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_3          (_ID_stage_io_d_ebus_alu_op_3),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_4          (_ID_stage_io_d_ebus_alu_op_4),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_5          (_ID_stage_io_d_ebus_alu_op_5),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_6          (_ID_stage_io_d_ebus_alu_op_6),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_7          (_ID_stage_io_d_ebus_alu_op_7),	// @[playground/src/SimTop.scala:29:24]
    .io_d_ebus_alu_op_8          (_ID_stage_io_d_ebus_alu_op_8),	// @[playground/src/SimTop.scala:29:24]
    .io_pc                       (pc),	// @[playground/src/SimTop.scala:12:35]
    .io_result                   (_EXE_stage_io_result),
    .io_jalr_taget               (jalr_taget),
    .io_sram_valid               (_EXE_stage_io_sram_valid),
    .io_sram_wen                 (_EXE_stage_io_sram_wen),
    .io_sram_wdata               (_EXE_stage_io_sram_wdata),
    .io_sram_wmask               (_EXE_stage_io_sram_wmask)
  );
  pmem_dpi pmem_dpi (	// @[playground/src/SimTop.scala:50:22]
    .clock      (clock),
    .reset      (reset),
    .pc         (pc),	// @[playground/src/SimTop.scala:12:35]
    .nextpc     (nextpc),	// @[playground/src/SimTop.scala:13:35]
    .sram_valid (_EXE_stage_io_sram_valid),	// @[playground/src/SimTop.scala:41:25]
    .sram_wen   (_EXE_stage_io_sram_wen),	// @[playground/src/SimTop.scala:41:25]
    .raddr      (_EXE_stage_io_result),	// @[playground/src/SimTop.scala:41:25]
    .waddr      (_EXE_stage_io_result),	// @[playground/src/SimTop.scala:41:25]
    .wdata      (_EXE_stage_io_sram_wdata),	// @[playground/src/SimTop.scala:41:25]
    .wmask      (_EXE_stage_io_sram_wmask),	// @[playground/src/SimTop.scala:41:25]
    .inst       (inst),
    .rdata      (sram_rdata)
  );
  assign io_result = _EXE_stage_io_result;	// @[<stdin>:654:3, playground/src/SimTop.scala:41:25]
endmodule


// ----- 8< ----- FILE "./dpi.sv" ----- 8< -----

// Generated by CIRCT firtool-1.56.0
import "DPI-C" function void sim_break(input int pc,input int ret_reg);
import "DPI-C" function void inv_break(input int pc);
import "DPI-C" function void cpu_use_func(input int pc,input int nextpc,input int inst,input bit is_jal,input int rd);
// import "DPI-C" function void get_pc(input int pc);
wire [63:0] rdata;
module singal_dpi(
    input        clock,
    input        reset,
    input [31:0] pc,
    input [31:0] nextpc,
    input [31:0] inst,
    input [31:0] rd,
    input        is_jal,
    input        func_flag,
    input        ebreak_flag,
    input        inv_flag,
    input [31:0] ret_reg
);
always @(posedge clock)begin
    if(~reset)begin
        if(ebreak_flag) sim_break(nextpc,ret_reg);
        if(inv_flag) inv_break(nextpc);
        if(func_flag) cpu_use_func(pc,nextpc,inst,is_jal,rd);
    end
end
endmodule //moduleName

// ----- 8< ----- FILE "./debug.sv" ----- 8< -----

// Generated by CIRCT firtool-1.56.0
import "DPI-C" function void prt_debug(input bit[4:0] debug_1,input int debug_2);
module debug(
    input        clock,
    input        reset,
    input [4:0] debug_1,
    input [31:0] debug_2
);
always @(posedge clock)begin
    if(~reset)begin
      if(debug_1==5'h1) prt_debug(debug_1,debug_2);
      prt_debug(debug_1,debug_2);
    end
end
endmodule //moduleName

// ----- 8< ----- FILE "./pmem.sv" ----- 8< -----

// Generated by CIRCT firtool-1.56.0
import "DPI-C" function void pmem_read(input int raddr, output int rdata);
import "DPI-C" function void get_pc(input int pc,input int nextpc);
// import "DPI-C" function void pmem_write(input int waddr, input int wdata, input byte wmask);

module pmem_dpi(
    input         clock,
    input         reset,
    input  [31:0] pc,
    input  [31:0] nextpc,
    output [31:0] inst,
    input         sram_valid,
    input         sram_wen,
    input  [31:0] raddr,
    output reg [31:0] rdata,
    input  [31:0] waddr,
    input  [31:0] wdata,
    input  [ 3:0] wmask
); 
always @(posedge clock) begin  
  if(~reset)begin
    get_pc(pc,nextpc);
    pmem_read(nextpc,inst);
    // if (sram_valid) begin // 有读写请求时
    //   pmem_read(raddr, rdata);
    //   if (sram_wen) begin // 有写请求时
    //   // pmem_write(waddr, wdata, wmask);
    //   end
    // end
    // else begin
    //   rdata = 0;
    // end
  end
end
endmodule //moduleName

// ----- 8< ----- FILE "firrtl_black_box_resource_files.f" ----- 8< -----
