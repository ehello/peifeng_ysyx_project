// Generated by CIRCT firtool-1.56.0
module RegFile(	// @[<stdin>:3:3]
  input         clock,	// @[<stdin>:4:11]
                reset,	// @[<stdin>:5:11]
  input  [4:0]  io_waddr,	// @[playground/src/RegFile.scala:5:12]
  input  [31:0] io_wdata,	// @[playground/src/RegFile.scala:5:12]
  input  [4:0]  io_raddr1,	// @[playground/src/RegFile.scala:5:12]
                io_raddr2,	// @[playground/src/RegFile.scala:5:12]
  input         io_wen,	// @[playground/src/RegFile.scala:5:12]
  output [31:0] io_rdata1,	// @[playground/src/RegFile.scala:5:12]
                io_rdata2	// @[playground/src/RegFile.scala:5:12]
);

  reg [31:0] casez_tmp;	// @[playground/src/RegFile.scala:16:17]
  reg [31:0] casez_tmp_0;	// @[playground/src/RegFile.scala:17:17]
  reg [31:0] rf_0;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_1;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_2;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_3;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_4;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_5;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_6;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_7;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_8;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_9;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_10;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_11;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_12;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_13;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_14;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_15;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_16;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_17;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_18;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_19;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_20;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_21;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_22;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_23;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_24;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_25;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_26;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_27;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_28;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_29;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_30;	// @[playground/src/RegFile.scala:14:17]
  reg [31:0] rf_31;	// @[playground/src/RegFile.scala:14:17]
  always_comb begin	// @[playground/src/RegFile.scala:16:17]
    casez (io_raddr1)	// @[playground/src/RegFile.scala:16:17]
      5'b00000:
        casez_tmp = rf_0;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00001:
        casez_tmp = rf_1;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00010:
        casez_tmp = rf_2;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00011:
        casez_tmp = rf_3;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00100:
        casez_tmp = rf_4;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00101:
        casez_tmp = rf_5;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00110:
        casez_tmp = rf_6;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00111:
        casez_tmp = rf_7;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01000:
        casez_tmp = rf_8;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01001:
        casez_tmp = rf_9;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01010:
        casez_tmp = rf_10;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01011:
        casez_tmp = rf_11;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01100:
        casez_tmp = rf_12;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01101:
        casez_tmp = rf_13;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01110:
        casez_tmp = rf_14;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01111:
        casez_tmp = rf_15;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10000:
        casez_tmp = rf_16;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10001:
        casez_tmp = rf_17;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10010:
        casez_tmp = rf_18;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10011:
        casez_tmp = rf_19;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10100:
        casez_tmp = rf_20;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10101:
        casez_tmp = rf_21;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10110:
        casez_tmp = rf_22;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10111:
        casez_tmp = rf_23;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11000:
        casez_tmp = rf_24;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11001:
        casez_tmp = rf_25;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11010:
        casez_tmp = rf_26;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11011:
        casez_tmp = rf_27;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11100:
        casez_tmp = rf_28;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11101:
        casez_tmp = rf_29;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11110:
        casez_tmp = rf_30;	// @[playground/src/RegFile.scala:14:17, :16:17]
      default:
        casez_tmp = rf_31;	// @[playground/src/RegFile.scala:14:17, :16:17]
    endcase	// @[playground/src/RegFile.scala:16:17]
  end // always_comb
  always_comb begin	// @[playground/src/RegFile.scala:16:17]
    casez (io_raddr2)	// @[playground/src/RegFile.scala:16:17]
      5'b00000:
        casez_tmp_0 = rf_0;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00001:
        casez_tmp_0 = rf_1;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00010:
        casez_tmp_0 = rf_2;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00011:
        casez_tmp_0 = rf_3;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00100:
        casez_tmp_0 = rf_4;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00101:
        casez_tmp_0 = rf_5;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00110:
        casez_tmp_0 = rf_6;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b00111:
        casez_tmp_0 = rf_7;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01000:
        casez_tmp_0 = rf_8;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01001:
        casez_tmp_0 = rf_9;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01010:
        casez_tmp_0 = rf_10;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01011:
        casez_tmp_0 = rf_11;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01100:
        casez_tmp_0 = rf_12;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01101:
        casez_tmp_0 = rf_13;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01110:
        casez_tmp_0 = rf_14;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b01111:
        casez_tmp_0 = rf_15;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10000:
        casez_tmp_0 = rf_16;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10001:
        casez_tmp_0 = rf_17;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10010:
        casez_tmp_0 = rf_18;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10011:
        casez_tmp_0 = rf_19;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10100:
        casez_tmp_0 = rf_20;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10101:
        casez_tmp_0 = rf_21;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10110:
        casez_tmp_0 = rf_22;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b10111:
        casez_tmp_0 = rf_23;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11000:
        casez_tmp_0 = rf_24;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11001:
        casez_tmp_0 = rf_25;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11010:
        casez_tmp_0 = rf_26;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11011:
        casez_tmp_0 = rf_27;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11100:
        casez_tmp_0 = rf_28;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11101:
        casez_tmp_0 = rf_29;	// @[playground/src/RegFile.scala:14:17, :16:17]
      5'b11110:
        casez_tmp_0 = rf_30;	// @[playground/src/RegFile.scala:14:17, :16:17]
      default:
        casez_tmp_0 = rf_31;	// @[playground/src/RegFile.scala:14:17, :16:17]
    endcase	// @[playground/src/RegFile.scala:16:17]
  end // always_comb
  always @(posedge clock) begin	// @[<stdin>:4:11]
    if (reset) begin	// @[<stdin>:4:11]
      rf_0 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_1 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_2 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_3 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_4 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_5 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_6 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_7 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_8 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_9 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_10 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_11 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_12 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_13 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_14 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_15 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_16 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_17 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_18 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_19 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_20 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_21 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_22 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_23 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_24 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_25 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_26 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_27 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_28 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_29 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_30 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
      rf_31 <= 32'h0;	// @[playground/src/RegFile.scala:14:{17,25}]
    end
    else begin	// @[<stdin>:4:11]
      if (io_wen & io_waddr == 5'h0)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_0 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h1)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_1 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h2)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_2 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h3)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_3 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h4)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_4 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h5)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_5 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h6)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_6 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h7)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_7 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h8)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_8 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h9)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_9 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'hA)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_10 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'hB)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_11 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'hC)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_12 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'hD)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_13 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'hE)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_14 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'hF)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_15 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h10)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_16 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h11)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_17 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h12)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_18 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h13)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_19 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h14)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_20 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h15)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_21 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h16)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_22 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h17)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_23 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h18)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_24 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h19)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_25 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h1A)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_26 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h1B)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_27 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h1C)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_28 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h1D)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_29 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & io_waddr == 5'h1E)	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_30 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
      if (io_wen & (&io_waddr))	// @[playground/src/RegFile.scala:14:17, :15:{15,29}]
        rf_31 <= io_wdata;	// @[playground/src/RegFile.scala:14:17]
    end
  end // always @(posedge)
  assign io_rdata1 = (|io_raddr1) ? casez_tmp : 32'h0;	// @[<stdin>:3:3, playground/src/RegFile.scala:14:25, :16:{17,27}]
  assign io_rdata2 = (|io_raddr2) ? casez_tmp_0 : 32'h0;	// @[<stdin>:3:3, playground/src/RegFile.scala:14:25, :17:{17,27}]
endmodule

module Alu(	// @[<stdin>:52:3]
  input  [11:0] io_op,	// @[playground/src/Alu.scala:5:14]
  input  [31:0] io_src1,	// @[playground/src/Alu.scala:5:14]
                io_src2,	// @[playground/src/Alu.scala:5:14]
  input         io_sign,	// @[playground/src/Alu.scala:5:14]
  output [31:0] io_result	// @[playground/src/Alu.scala:5:14]
);

  wire [94:0] _sll_T_1 = {63'h0, io_src1} << io_src2[5:0];	// @[playground/src/Alu.scala:19:{18,28}]
  wire [31:0] _GEN = {26'h0, io_src2[5:0]};	// @[playground/src/Alu.scala:19:28, :39:32]
  assign io_result =
    io_op == 12'h400
      ? io_src1 >> _GEN
      : io_op == 12'h200
          ? $signed($signed(io_src1) >>> _GEN)
          : io_op == 12'h100
              ? _sll_T_1[31:0]
              : io_op == 12'h80
                  ? {31'h0,
                     io_sign ? $signed(io_src1) < $signed(io_src2) : io_src1 < io_src2}
                  : io_op == 12'h40
                      ? {31'h0, io_src1 == io_src2}
                      : io_op == 12'h20
                          ? io_src1 ^ io_src2
                          : io_op == 12'h10
                              ? io_src1 | io_src2
                              : io_op == 12'h8
                                  ? io_src1 & io_src2
                                  : io_op == 12'h4
                                      ? ~io_src1
                                      : io_op == 12'h2
                                          ? io_src1 - io_src2
                                          : io_op == 12'h1
                                              ? (io_sign
                                                   ? io_src1 + io_src2
                                                   : io_src1 + io_src2)
                                              : 32'h0;	// @[<stdin>:52:3, playground/src/Alu.scala:12:32, :13:25, :15:29, :16:36, :19:18, :21:20, :23:24, :25:17, :27:25, :29:25, :31:25, :33:28, :35:20, :37:20, :39:32, :41:25, :43:37]
endmodule

// external module singal_dpi

module SimTop(	// @[<stdin>:125:3]
  input         clock,	// @[<stdin>:126:11]
                reset,	// @[<stdin>:127:11]
  input  [31:0] io_inst,	// @[playground/src/SimTop.scala:6:14]
  output [31:0] io_pc,	// @[playground/src/SimTop.scala:6:14]
                io_result,	// @[playground/src/SimTop.scala:6:14]
  output        io_wen,	// @[playground/src/SimTop.scala:6:14]
  output [31:0] io_imm	// @[playground/src/SimTop.scala:6:14]
);

  wire [31:0] Imm;	// @[playground/src/SimTop.scala:100:39]
  wire [31:0] _alu_io_result;	// @[playground/src/SimTop.scala:158:18]
  wire [31:0] _RegFile_io_rdata1;	// @[playground/src/SimTop.scala:150:21]
  wire [31:0] _RegFile_io_rdata2;	// @[playground/src/SimTop.scala:150:21]
  reg  [31:0] REGpc;	// @[playground/src/SimTop.scala:30:20]
  wire [31:0] snpc = REGpc + 32'h4;	// @[playground/src/SimTop.scala:17:26, :30:20, :31:14]
  wire [31:0] jalr_taget;	// @[playground/src/SimTop.scala:15:32]
  wire        IsaI_jalr;	// @[playground/src/SimTop.scala:24:26]
  wire        IsaU_jal;	// @[playground/src/SimTop.scala:27:26]
  wire [31:0] dnpc = IsaU_jal ? REGpc + Imm : IsaI_jalr ? jalr_taget : snpc;	// @[playground/src/SimTop.scala:15:32, :17:26, :18:26, :24:26, :27:26, :30:20, :32:{12,27}, :33:14, :100:39]
  wire        is_jump;	// @[playground/src/SimTop.scala:21:29]
  wire [31:0] nextpc = is_jump ? dnpc : snpc;	// @[playground/src/SimTop.scala:16:28, :17:26, :18:26, :21:29, :34:14]
  wire        IsaU_lui = io_inst[6:0] == 7'h37;	// @[playground/src/SimTop.scala:27:26, :52:24]
  wire        IsaU_auipc = io_inst[6:0] == 7'h17;	// @[playground/src/SimTop.scala:27:26, :52:24, :53:24]
  assign IsaU_jal = io_inst[6:0] == 7'h6F;	// @[playground/src/SimTop.scala:27:26, :52:24, :54:24]
  wire [9:0]  _GEN = {io_inst[14:12], io_inst[6:0]};	// @[playground/src/SimTop.scala:52:24, :55:24]
  assign IsaI_jalr = _GEN == 10'h67;	// @[playground/src/SimTop.scala:24:26, :55:24]
  wire        IsaB_beq = _GEN == 10'h63;	// @[playground/src/SimTop.scala:26:26, :55:24, :56:24]
  wire        IsaB_bne = _GEN == 10'hE3;	// @[playground/src/SimTop.scala:26:26, :55:24, :57:24]
  wire        IsaB_blt = _GEN == 10'h263;	// @[playground/src/SimTop.scala:26:26, :55:24, :58:24]
  wire        IsaB_bge = _GEN == 10'h2E3;	// @[playground/src/SimTop.scala:26:26, :55:24, :59:24]
  wire        IsaB_bltu = _GEN == 10'h363;	// @[playground/src/SimTop.scala:26:26, :55:24, :60:24]
  wire        IsaB_bgeu = _GEN == 10'h3E3;	// @[playground/src/SimTop.scala:26:26, :55:24, :61:24]
  wire        IsaI_lb = _GEN == 10'h3;	// @[playground/src/SimTop.scala:24:26, :55:24, :62:24]
  wire        IsaI_lh = _GEN == 10'h83;	// @[playground/src/SimTop.scala:24:26, :55:24, :63:24]
  wire        IsaI_lw = _GEN == 10'h103;	// @[playground/src/SimTop.scala:24:26, :55:24, :64:24]
  wire        IsaI_lbu = _GEN == 10'h203;	// @[playground/src/SimTop.scala:24:26, :55:24, :65:24]
  wire        IsaI_lhu = _GEN == 10'h283;	// @[playground/src/SimTop.scala:24:26, :55:24, :66:24]
  wire        IsaS_sb = _GEN == 10'h23;	// @[playground/src/SimTop.scala:25:26, :55:24, :67:24]
  wire        IsaS_sh = _GEN == 10'hA3;	// @[playground/src/SimTop.scala:25:26, :55:24, :68:24]
  wire        IsaS_sw = _GEN == 10'h123;	// @[playground/src/SimTop.scala:25:26, :55:24, :69:24]
  wire        IsaI_addi = _GEN == 10'h13;	// @[playground/src/SimTop.scala:24:26, :55:24, :70:24]
  wire        IsaI_slti = _GEN == 10'h113;	// @[playground/src/SimTop.scala:24:26, :55:24, :71:24]
  wire        IsaI_sltiu = _GEN == 10'h193;	// @[playground/src/SimTop.scala:24:26, :55:24, :72:24]
  wire        IsaI_xori = _GEN == 10'h213;	// @[playground/src/SimTop.scala:24:26, :55:24, :73:24]
  wire        IsaI_ori = _GEN == 10'h313;	// @[playground/src/SimTop.scala:24:26, :55:24, :74:24]
  wire        IsaI_andi = _GEN == 10'h393;	// @[playground/src/SimTop.scala:24:26, :55:24, :75:24]
  wire [16:0] _GEN_0 = {io_inst[31:25], io_inst[14:12], io_inst[6:0]};	// @[playground/src/SimTop.scala:52:24, :55:24, :76:24]
  wire        IsaI_slli = _GEN_0 == 17'h93;	// @[playground/src/SimTop.scala:24:26, :76:24]
  wire        IsaI_srli = _GEN_0 == 17'h293;	// @[playground/src/SimTop.scala:24:26, :76:24, :77:24]
  wire        IsaI_srai = _GEN_0 == 17'h8293;	// @[playground/src/SimTop.scala:24:26, :76:24, :78:24]
  wire        IsaR_add = _GEN_0 == 17'h33;	// @[playground/src/SimTop.scala:23:26, :76:24, :79:24]
  wire        IsaR_sub = _GEN_0 == 17'h8033;	// @[playground/src/SimTop.scala:23:26, :76:24, :80:24]
  wire        IsaR_sll = _GEN_0 == 17'hB3;	// @[playground/src/SimTop.scala:23:26, :76:24, :81:24]
  wire        IsaR_slt = _GEN_0 == 17'h133;	// @[playground/src/SimTop.scala:23:26, :76:24, :82:24]
  wire        IsaR_sltu = _GEN_0 == 17'h1B3;	// @[playground/src/SimTop.scala:23:26, :76:24, :83:24]
  wire        IsaR_xor = _GEN_0 == 17'h233;	// @[playground/src/SimTop.scala:23:26, :76:24, :84:24]
  wire        IsaR_srl = _GEN_0 == 17'h2B3;	// @[playground/src/SimTop.scala:23:26, :76:24, :85:24]
  wire        IsaR_sra = _GEN_0 == 17'h82B3;	// @[playground/src/SimTop.scala:23:26, :76:24, :86:24]
  wire        IsaR_or = _GEN_0 == 17'h333;	// @[playground/src/SimTop.scala:23:26, :76:24, :87:24]
  wire        IsaR_and = _GEN_0 == 17'h3B3;	// @[playground/src/SimTop.scala:23:26, :76:24, :88:24]
  wire        IsaI_ebreak;	// @[playground/src/SimTop.scala:24:26]
  assign IsaI_ebreak = io_inst == 32'h100073;	// @[playground/src/SimTop.scala:24:26, :91:24]
  wire [4:0]  _Imm_T =
    {|{IsaI_jalr,
       IsaI_lb,
       IsaI_lh,
       IsaI_lw,
       IsaI_lbu,
       IsaI_lhu,
       IsaI_addi,
       IsaI_slti,
       IsaI_sltiu,
       IsaI_xori,
       IsaI_ori,
       IsaI_andi,
       IsaI_slli,
       IsaI_srli,
       IsaI_srai,
       IsaI_ebreak},
     |{IsaS_sb, IsaS_sh, IsaS_sw},
     |{IsaB_beq, IsaB_bne, IsaB_blt, IsaB_bge, IsaB_bltu, IsaB_bgeu},
     |{IsaU_lui, IsaU_auipc, IsaU_jal},
     IsaU_jal};	// @[playground/src/SimTop.scala:24:26, :25:26, :26:26, :27:26, :95:{30,36}, :96:{30,36}, :97:{30,36}, :98:{30,36}, :100:28]
  assign Imm =
    _Imm_T == 5'h3
      ? {{12{io_inst[19]}}, io_inst[19:12], io_inst[20], io_inst[30:21], 1'h0}
      : _Imm_T == 5'h2
          ? {io_inst[31:12], 12'h0}
          : _Imm_T == 5'h4
              ? {{21{io_inst[7]}}, io_inst[30:25], io_inst[11:8], 1'h0}
              : _Imm_T == 5'h8
                  ? {{20{io_inst[31]}}, io_inst[31:25], io_inst[11:7]}
                  : _Imm_T == 5'h10 ? {{20{io_inst[31]}}, io_inst[31:20]} : 32'h0;	// @[playground/src/Bundle.scala:76:{10,15,37}, playground/src/SimTop.scala:34:15, :41:23, :42:{27,42}, :43:{39,50,65}, :44:{19,27}, :45:{39,54,66}, :100:{28,39}]
  wire        _alu_op_0_T = IsaI_addi | IsaR_add;	// @[playground/src/SimTop.scala:23:26, :24:26, :108:22]
  wire        wen =
    _alu_op_0_T | IsaI_andi | IsaR_and | IsaU_lui | IsaR_slt | IsaR_sltu | IsaR_sub
    | IsaI_ori | IsaR_or | IsaI_xori | IsaR_xor | IsaI_jalr | IsaU_jal | IsaU_auipc
    | IsaI_slti | IsaI_sltiu | IsaI_slli | IsaI_srai | IsaI_srli | IsaR_sll | IsaR_sra
    | IsaR_srl;	// @[playground/src/SimTop.scala:23:26, :24:26, :27:26, :108:22, :112:57]
  wire        result_is_snpc = IsaU_jal | IsaI_jalr;	// @[playground/src/SimTop.scala:24:26, :27:26, :115:31]
  wire        alu_op_9 = IsaI_srai | IsaR_sra;	// @[playground/src/SimTop.scala:23:26, :24:26, :116:29]
  assign is_jump =
    result_is_snpc | IsaB_beq & _alu_io_result[0] | IsaB_bne & ~(_alu_io_result[0])
    | IsaB_blt & _alu_io_result[0] | IsaB_bltu & _alu_io_result[0] | IsaB_bge
    & ~(_alu_io_result[0]) | IsaB_bgeu & ~(_alu_io_result[0]);	// @[playground/src/SimTop.scala:21:29, :26:26, :115:31, :158:18, :171:{24,41}, :172:{24,27}, :173:24, :174:24, :175:{24,27}, :176:{13,24,27}]
  wire [31:0] _io_result_output = IsaU_lui ? Imm : result_is_snpc ? snpc : _alu_io_result;	// @[playground/src/SimTop.scala:17:26, :27:26, :100:39, :115:31, :158:18, :181:17, :182:18]
  wire [31:0] _jalr_tmp_T = _alu_io_result + Imm;	// @[playground/src/SimTop.scala:100:39, :158:18, :183:29]
  assign jalr_taget = {_jalr_tmp_T[31:1], 1'h0};	// @[playground/src/SimTop.scala:15:32, :34:15, :183:29, :184:{18,27}]
  always @(posedge clock) begin	// @[<stdin>:126:11]
    if (reset)	// @[<stdin>:126:11]
      REGpc <= 32'h80000000;	// @[playground/src/SimTop.scala:30:20]
    else	// @[<stdin>:126:11]
      REGpc <= nextpc;	// @[playground/src/SimTop.scala:16:28, :30:20]
  end // always @(posedge)
  RegFile RegFile (	// @[playground/src/SimTop.scala:150:21]
    .clock     (clock),
    .reset     (reset),
    .io_waddr  (io_inst[11:7]),	// @[playground/src/SimTop.scala:42:42]
    .io_wdata  (_io_result_output),	// @[playground/src/SimTop.scala:181:17]
    .io_raddr1 (IsaI_ebreak ? 5'hA : io_inst[19:15]),	// @[playground/src/SimTop.scala:24:26, :47:23, :151:25]
    .io_raddr2 (IsaI_ebreak ? 5'h0 : io_inst[24:20]),	// @[playground/src/SimTop.scala:24:26, :46:23, :152:25]
    .io_wen    (wen),	// @[playground/src/SimTop.scala:112:57]
    .io_rdata1 (_RegFile_io_rdata1),
    .io_rdata2 (_RegFile_io_rdata2)
  );
  Alu alu (	// @[playground/src/SimTop.scala:158:18]
    .io_op
      ({1'h0,
        IsaI_srli | IsaR_srl,
        alu_op_9,
        IsaI_slli | IsaR_sll,
        IsaB_blt | IsaB_bltu | IsaB_bge | IsaB_bgeu | IsaR_slt | IsaR_sltu | IsaI_slti
          | IsaI_sltiu,
        IsaB_beq | IsaB_bne,
        IsaI_xori | IsaR_xor,
        IsaI_ori | IsaR_or,
        IsaI_andi | IsaR_and,
        1'h0,
        IsaR_sub,
        _alu_op_0_T | IsaI_ebreak | IsaI_jalr}),	// @[playground/src/SimTop.scala:23:26, :24:26, :26:26, :34:15, :108:22, :116:29, :125:51, :131:25, :133:25, :135:25, :137:25, :140:25, :142:25, :146:25, :164:23]
    .io_src1   (IsaU_auipc ? REGpc : _RegFile_io_rdata1),	// @[playground/src/SimTop.scala:27:26, :30:20, :150:21, :159:15]
    .io_src2
      (IsaI_addi | IsaI_slti | IsaI_sltiu | IsaI_xori | IsaI_ori | IsaI_andi | IsaI_jalr
         ? Imm
         : IsaI_slli | IsaI_srai | IsaI_srli
             ? {26'h0, io_inst[25:20]}
             : IsaR_sll | IsaR_sra | IsaR_srl
                 ? {26'h0, _RegFile_io_rdata2[5:0]}
                 : _RegFile_io_rdata2),	// @[playground/src/SimTop.scala:23:26, :24:26, :52:24, :100:39, :118:86, :119:47, :120:47, :150:21, :160:15, :161:{16,44}, :162:{18,46}]
    .io_sign   (alu_op_9 | IsaR_slt | IsaB_blt | IsaB_bltu),	// @[playground/src/SimTop.scala:23:26, :26:26, :116:{29,63}]
    .io_result (_alu_io_result)
  );
  singal_dpi singal_dpi (	// @[playground/src/SimTop.scala:187:24]
    .clock       (clock),
    .reset       (reset),
    .pc          (REGpc),	// @[playground/src/SimTop.scala:30:20]
    .ebreak_flag (IsaI_ebreak),	// @[playground/src/SimTop.scala:24:26]
    .inv_flag
      ({IsaB_beq, IsaB_bne, IsaB_blt, IsaB_bge, IsaB_bltu, IsaB_bgeu} == 6'h0
       & {IsaI_jalr,
          IsaI_lb,
          IsaI_lh,
          IsaI_lw,
          IsaI_lbu,
          IsaI_lhu,
          IsaI_addi,
          IsaI_slti,
          IsaI_sltiu,
          IsaI_xori,
          IsaI_ori,
          IsaI_andi,
          IsaI_slli,
          IsaI_srli,
          IsaI_srai,
          IsaI_ebreak} == 16'h0
       & {IsaR_add,
          IsaR_sub,
          IsaR_sll,
          IsaR_slt,
          IsaR_sltu,
          IsaR_xor,
          IsaR_srl,
          IsaR_sra,
          IsaR_or,
          IsaR_and} == 10'h0 & {IsaS_sb, IsaS_sh, IsaS_sw} == 3'h0
       & {IsaU_lui, IsaU_auipc, IsaU_jal} == 3'h0),	// @[playground/src/SimTop.scala:23:26, :24:26, :25:26, :26:26, :27:26, :90:{22,28,42,48,62,68,82,88,95,102,108}]
    .ret_reg     (_alu_io_result)	// @[playground/src/SimTop.scala:158:18]
  );
  assign io_pc = REGpc;	// @[<stdin>:125:3, playground/src/SimTop.scala:30:20]
  assign io_result = _io_result_output;	// @[<stdin>:125:3, playground/src/SimTop.scala:181:17]
  assign io_wen = wen;	// @[<stdin>:125:3, playground/src/SimTop.scala:112:57]
  assign io_imm = Imm;	// @[<stdin>:125:3, playground/src/SimTop.scala:100:39]
endmodule


// ----- 8< ----- FILE "./dpi.sv" ----- 8< -----

// Generated by CIRCT firtool-1.56.0
import "DPI-C" function void sim_break(input int pc,input int ret_reg);
import "DPI-C" function void inv_break(input int pc);
module singal_dpi(
    input        clock,
    input        reset,
    input [31:0] pc,
    input        ebreak_flag,
    input        inv_flag,
    input [31:0] ret_reg
);
always @(posedge clock)begin
    if(~reset)begin
        if(ebreak_flag==1) sim_break(pc,ret_reg);
        if(inv_flag==1) inv_break(pc);
    end
end
endmodule //moduleName

// ----- 8< ----- FILE "firrtl_black_box_resource_files.f" ----- 8< -----


