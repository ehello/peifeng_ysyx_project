// Generated by CIRCT firtool-1.56.0
module LS_stage(	// @[<stdin>:1061:3]
  input         clock,	// @[<stdin>:1062:11]
                reset,	// @[<stdin>:1063:11]
                LS_IO_bits_pc_sel,	// @[playground/src/LS_stage.scala:7:12]
  input  [11:0] LS_IO_bits_csr_addr,	// @[playground/src/LS_stage.scala:7:12]
  input  [4:0]  LS_IO_bits_csr_cmd,	// @[playground/src/LS_stage.scala:7:12]
  input  [7:0]  LS_IO_bits_st_type,	// @[playground/src/LS_stage.scala:7:12]
  input  [2:0]  LS_IO_bits_ld_type,	// @[playground/src/LS_stage.scala:7:12]
  input         LS_IO_bits_ebreak_flag,	// @[playground/src/LS_stage.scala:7:12]
  input  [1:0]  LS_IO_bits_wb_sel,	// @[playground/src/LS_stage.scala:7:12]
  input         LS_IO_bits_wen,	// @[playground/src/LS_stage.scala:7:12]
  input  [4:0]  LS_IO_bits_rd,	// @[playground/src/LS_stage.scala:7:12]
  input  [31:0] LS_IO_bits_rdata2,	// @[playground/src/LS_stage.scala:7:12]
                LS_IO_bits_result,	// @[playground/src/LS_stage.scala:7:12]
                LS_IO_bits_nextpc,	// @[playground/src/LS_stage.scala:7:12]
                LS_IO_bits_pc,	// @[playground/src/LS_stage.scala:7:12]
  output        LS_to_wb_bits_pc_sel,	// @[playground/src/LS_stage.scala:7:12]
  output [11:0] LS_to_wb_bits_csr_addr,	// @[playground/src/LS_stage.scala:7:12]
  output [4:0]  LS_to_wb_bits_csr_cmd,	// @[playground/src/LS_stage.scala:7:12]
  output        LS_to_wb_bits_ebreak_flag,	// @[playground/src/LS_stage.scala:7:12]
                LS_to_wb_bits_wen,	// @[playground/src/LS_stage.scala:7:12]
  output [4:0]  LS_to_wb_bits_rd,	// @[playground/src/LS_stage.scala:7:12]
  output [31:0] LS_to_wb_bits_result,	// @[playground/src/LS_stage.scala:7:12]
                LS_to_wb_bits_nextpc,	// @[playground/src/LS_stage.scala:7:12]
                LS_to_wb_bits_pc	// @[playground/src/LS_stage.scala:7:12]
);

  wire [31:0] _dpi_ls_rdata;	// @[playground/src/LS_stage.scala:17:20]
  reg  [31:0] casez_tmp;	// @[playground/src/LS_stage.scala:27:46]
  reg  [31:0] casez_tmp_0;	// @[playground/src/LS_stage.scala:43:57]
  always_comb begin	// @[playground/src/LS_stage.scala:27:46]
    casez (LS_IO_bits_ld_type)	// @[playground/src/LS_stage.scala:27:46]
      3'b000:
        casez_tmp = 32'h0;	// @[playground/src/LS_stage.scala:27:46]
      3'b001:
        casez_tmp = _dpi_ls_rdata;	// @[playground/src/LS_stage.scala:17:20, :27:46]
      3'b010:
        casez_tmp = {{16{_dpi_ls_rdata[15]}}, _dpi_ls_rdata[15:0]};	// @[playground/src/Bundle.scala:91:{10,15,37}, playground/src/LS_stage.scala:17:20, :27:46, :29:34]
      3'b011:
        casez_tmp = {{24{_dpi_ls_rdata[7]}}, _dpi_ls_rdata[7:0]};	// @[playground/src/Bundle.scala:91:{10,15,37}, playground/src/LS_stage.scala:17:20, :27:46, :30:34]
      3'b100:
        casez_tmp = {16'h0, _dpi_ls_rdata[15:0]};	// @[playground/src/Bundle.scala:91:15, :102:10, playground/src/LS_stage.scala:17:20, :27:46, :29:34]
      3'b101:
        casez_tmp = {24'h0, _dpi_ls_rdata[7:0]};	// @[playground/src/Bundle.scala:91:15, :102:10, playground/src/LS_stage.scala:17:20, :27:46, :30:34]
      3'b110:
        casez_tmp = 32'h0;	// @[playground/src/LS_stage.scala:27:46]
      default:
        casez_tmp = 32'h0;	// @[playground/src/LS_stage.scala:27:46]
    endcase	// @[playground/src/LS_stage.scala:27:46]
  end // always_comb
  wire [31:0] ram_data = casez_tmp;	// @[playground/src/LS_stage.scala:16:30, :27:46]
  always_comb begin	// @[playground/src/LS_stage.scala:43:57]
    casez (LS_IO_bits_wb_sel)	// @[playground/src/LS_stage.scala:43:57]
      2'b00:
        casez_tmp_0 = LS_IO_bits_result;	// @[playground/src/LS_stage.scala:43:57]
      2'b01:
        casez_tmp_0 = ram_data;	// @[playground/src/LS_stage.scala:16:30, :43:57]
      2'b10:
        casez_tmp_0 = LS_IO_bits_pc + 32'h4;	// @[playground/src/LS_stage.scala:43:57, :46:29]
      default:
        casez_tmp_0 = LS_IO_bits_result;	// @[playground/src/LS_stage.scala:43:57]
    endcase	// @[playground/src/LS_stage.scala:43:57]
  end // always_comb
  dpi_ls dpi_ls (	// @[playground/src/LS_stage.scala:17:20]
    .clock  (clock),
    .reset  (reset),
    .ld_wen (|LS_IO_bits_ld_type),	// @[playground/src/LS_stage.scala:20:46]
    .st_wen (|LS_IO_bits_st_type),	// @[playground/src/LS_stage.scala:21:46]
    .raddr  (LS_IO_bits_result),
    .wmask  (LS_IO_bits_st_type),
    .waddr  (LS_IO_bits_result),
    .wdata  (LS_IO_bits_rdata2),
    .rdata  (_dpi_ls_rdata)
  );
  assign LS_to_wb_bits_pc_sel = LS_IO_bits_pc_sel;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_csr_addr = LS_IO_bits_csr_addr;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_csr_cmd = LS_IO_bits_csr_cmd;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_ebreak_flag = LS_IO_bits_ebreak_flag;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_wen = LS_IO_bits_wen;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_rd = LS_IO_bits_rd;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_result = casez_tmp_0;	// @[<stdin>:1061:3, playground/src/LS_stage.scala:43:57]
  assign LS_to_wb_bits_nextpc = LS_IO_bits_nextpc;	// @[<stdin>:1061:3]
  assign LS_to_wb_bits_pc = LS_IO_bits_pc;	// @[<stdin>:1061:3]
endmodule

